- indent html code for js
- tests for js code
- default function args

- some way to specify body when elem is created w block

- test a longer salty file converted to php and js

const elem = React.createElement("div", {
    children: "Hello World",
    className: "container"
    });

ReactDOM.render(element, rootElement)


OR

const elem = React.createElement("div", {
    className: "container"
    },
    "Hello World", // add as many args as you want for the children
    "Goodbye World"
    );

ReactDOM.render(element, rootElement)


React for creating elements, REactDOM for rendering to the page


- passing callbacks down a react tree is painful, one solution would be to use a state monad

this doesn't work:

    const [name, setName] = React.useState("")

const and let both have this issue.


js doesn't have private functions so this:

    _dispatch action

should create a function named `_dispatch` not `dispatch`

This doesn't work:

  state.map(\todo -> if todo.id == action.id then todo <> { completed: !todo.completed } else todo)

salty compiles it correctly, but js needs braces around the if in the map.


allow partial operations as hash values
in a where clause, all those vars need to be defined w a const or a let.

---

would be cool to add some basic checks as warnings. Like constructors of react components need to have a super(props) call.
getChildContext needs to be matched with a childContextTypes. Functions that use a context need to define contextTypes. etc.
